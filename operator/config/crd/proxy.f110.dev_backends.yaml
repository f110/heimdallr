
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: backends.proxy.f110.dev
spec:
  group: proxy.f110.dev
  names:
    kind: Backend
    listKind: BackendList
    plural: backends
    singular: backend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Backend is the Schema for the backends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackendSpec defines the desired state of Backend
            properties:
              agent:
                type: boolean
              allowHttp:
                type: boolean
              allowRootUser:
                type: boolean
              disableAuthn:
                type: boolean
              fqdn:
                type: string
              insecure:
                type: boolean
              layer:
                type: string
              maxSessionDuration:
                type: string
              permissions:
                items:
                  properties:
                    locations:
                      items:
                        properties:
                          any:
                            type: string
                          connect:
                            type: string
                          delete:
                            type: string
                          get:
                            type: string
                          head:
                            type: string
                          options:
                            type: string
                          patch:
                            type: string
                          post:
                            type: string
                          put:
                            type: string
                          trace:
                            type: string
                        type: object
                      type: array
                    name:
                      type: string
                  type: object
                type: array
              serviceSelector:
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                  name:
                    type: string
                  namespace:
                    type: string
                  port:
                    type: string
                  scheme:
                    type: string
                type: object
              socket:
                type: boolean
              socketTimeout:
                type: string
              upstream:
                type: string
              webhook:
                type: string
              webhookConfiguration:
                properties:
                  appIdKey:
                    type: string
                  contentType:
                    type: string
                  credentialSecretName:
                    type: string
                  credentialSecretNamespace:
                    type: string
                  events:
                    items:
                      type: string
                    type: array
                  installationIdKey:
                    type: string
                  path:
                    type: string
                  privateKeyKey:
                    type: string
                  repositories:
                    items:
                      type: string
                    type: array
                required:
                - repositories
                type: object
              webhookPath:
                items:
                  type: string
                type: array
            type: object
          status:
            description: BackendStatus defines the observed state of Backend
            properties:
              deployedBy:
                items:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                    url:
                      type: string
                  type: object
                type: array
              webhookConfiguration:
                items:
                  properties:
                    id:
                      format: int64
                      type: integer
                    repository:
                      type: string
                    updateTime:
                      format: date-time
                      type: string
                  required:
                  - id
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
