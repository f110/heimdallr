
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: etcdclusters.etcd.f110.dev
spec:
  group: etcd.f110.dev
  names:
    kind: EtcdCluster
    listKind: EtcdClusterList
    plural: etcdclusters
    singular: etcdcluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: string
    - description: Phase
      format: byte
      jsonPath: .status.phase
      name: phase
      type: string
    - description: Members
      format: byte
      jsonPath: .spec.members
      name: members
      type: string
    - description: Age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              antiAffinity:
                type: boolean
              backup:
                properties:
                  intervalInSeconds:
                    type: integer
                  maxBackups:
                    type: integer
                  storage:
                    properties:
                      gcs:
                        properties:
                          bucket:
                            type: string
                          credentialSelector:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                              serviceAccountJSONKey:
                                type: string
                            type: object
                          path:
                            type: string
                        type: object
                      minio:
                        description: MinIO is in-cluster MinIO config
                        properties:
                          bucket:
                            type: string
                          credentialSelector:
                            properties:
                              accessKeyIDKey:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                              secretAccessKeyKey:
                                type: string
                            type: object
                          path:
                            type: string
                          secure:
                            type: boolean
                          serviceSelector:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              defragmentSchedule:
                type: string
              members:
                type: integer
              version:
                type: string
              volumeClaimTemplate:
                description: PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim
                  objects as part of an EphemeralVolumeSource.
                properties:
                  metadata:
                    description: May contain labels and annotations that will be copied
                      into the PVC when creating it. No other fields are allowed and
                      will be rejected during validation.
                    type: object
                  spec:
                    description: The specification for the PersistentVolumeClaim.
                      The entire content is copied unchanged into the PVC that gets
                      created from this template. The same fields as in a PersistentVolumeClaim
                      are also valid here.
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) If the provisioner
                          or an external controller can support the specified data
                          source, it will create a new volume based on the contents
                          of the specified data source. If the AnyVolumeDataSource
                          feature gate is enabled, this field will always have the
                          same contents as the DataSourceRef field.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      dataSourceRef:
                        description: 'Specifies the object from which to populate
                          the volume with data, if a non-empty volume is desired.
                          This may be any local object from a non-empty API group
                          (non core object) or a PersistentVolumeClaim object. When
                          this field is specified, volume binding will only succeed
                          if the type of the specified object matches some installed
                          volume populator or dynamic provisioner. This field will
                          replace the functionality of the DataSource field and as
                          such if both fields are non-empty, they must have the same
                          value. For backwards compatibility, both fields (DataSource
                          and DataSourceRef) will be set to the same value automatically
                          if one of them is empty and the other is non-empty. There
                          are two important differences between DataSource and DataSourceRef:
                          * While DataSource only allows two specific types of objects,
                          DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim
                          objects. * While DataSource ignores disallowed values (dropping
                          them), DataSourceRef   preserves all values, and generates
                          an error if a disallowed value is   specified. (Alpha) Using
                          this field requires the AnyVolumeDataSource feature gate
                          to be enabled.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - defragmentSchedule
            - members
            - version
            type: object
          status:
            properties:
              backup:
                properties:
                  backupStatusHistory:
                    items:
                      properties:
                        etcdRevision:
                          format: int64
                          type: integer
                        etcdVersion:
                          type: string
                        executeTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        path:
                          type: string
                        succeeded:
                          type: boolean
                      type: object
                    type: array
                  lastSucceededTime:
                    format: date-time
                    type: string
                  succeeded:
                    type: boolean
                type: object
              clientCertSecretName:
                type: string
              clientEndpoint:
                type: string
              lastDefragmentTime:
                format: date-time
                type: string
              lastReadyTransitionTime:
                format: date-time
                type: string
              members:
                items:
                  properties:
                    id:
                      format: int64
                      type: integer
                    leader:
                      type: boolean
                    leaner:
                      type: boolean
                    name:
                      type: string
                    podName:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              phase:
                type: string
              ready:
                type: boolean
              restoreFrom:
                description: Deprecated. Do not use this field.
                type: string
              restored:
                properties:
                  backupTime:
                    format: date-time
                    type: string
                  completed:
                    type: boolean
                  path:
                    type: string
                  restoredTime:
                    format: date-time
                    type: string
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: string
    - description: Phase
      format: byte
      jsonPath: .status.phase
      name: phase
      type: string
    - description: Members
      format: byte
      jsonPath: .spec.members
      name: members
      type: string
    - description: Age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              antiAffinity:
                type: boolean
              backup:
                properties:
                  intervalInSeconds:
                    type: integer
                  maxBackups:
                    type: integer
                  storage:
                    properties:
                      gcs:
                        properties:
                          bucket:
                            type: string
                          credentialSelector:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                              serviceAccountJSONKey:
                                type: string
                            type: object
                          path:
                            type: string
                        type: object
                      minio:
                        description: MinIO is in-cluster MinIO config
                        properties:
                          bucket:
                            type: string
                          credentialSelector:
                            properties:
                              accessKeyIDKey:
                                type: string
                              name:
                                type: string
                              namespace:
                                type: string
                              secretAccessKeyKey:
                                type: string
                            type: object
                          path:
                            type: string
                          secure:
                            type: boolean
                          serviceSelector:
                            properties:
                              name:
                                type: string
                              namespace:
                                type: string
                            type: object
                        type: object
                    type: object
                type: object
              defragmentSchedule:
                type: string
              development:
                description: Development indicates the development mode.
                type: boolean
              members:
                type: integer
              version:
                type: string
              volumeClaimTemplate:
                description: PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim
                  objects as part of an EphemeralVolumeSource.
                properties:
                  metadata:
                    description: May contain labels and annotations that will be copied
                      into the PVC when creating it. No other fields are allowed and
                      will be rejected during validation.
                    type: object
                  spec:
                    description: The specification for the PersistentVolumeClaim.
                      The entire content is copied unchanged into the PVC that gets
                      created from this template. The same fields as in a PersistentVolumeClaim
                      are also valid here.
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) If the provisioner
                          or an external controller can support the specified data
                          source, it will create a new volume based on the contents
                          of the specified data source. If the AnyVolumeDataSource
                          feature gate is enabled, this field will always have the
                          same contents as the DataSourceRef field.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      dataSourceRef:
                        description: 'Specifies the object from which to populate
                          the volume with data, if a non-empty volume is desired.
                          This may be any local object from a non-empty API group
                          (non core object) or a PersistentVolumeClaim object. When
                          this field is specified, volume binding will only succeed
                          if the type of the specified object matches some installed
                          volume populator or dynamic provisioner. This field will
                          replace the functionality of the DataSource field and as
                          such if both fields are non-empty, they must have the same
                          value. For backwards compatibility, both fields (DataSource
                          and DataSourceRef) will be set to the same value automatically
                          if one of them is empty and the other is non-empty. There
                          are two important differences between DataSource and DataSourceRef:
                          * While DataSource only allows two specific types of objects,
                          DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim
                          objects. * While DataSource ignores disallowed values (dropping
                          them), DataSourceRef   preserves all values, and generates
                          an error if a disallowed value is   specified. (Alpha) Using
                          this field requires the AnyVolumeDataSource feature gate
                          to be enabled.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                required:
                - spec
                type: object
            required:
            - defragmentSchedule
            - members
            - version
            type: object
          status:
            properties:
              backup:
                properties:
                  backupStatusHistory:
                    items:
                      properties:
                        etcdRevision:
                          format: int64
                          type: integer
                        etcdVersion:
                          type: string
                        executeTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        path:
                          type: string
                        succeeded:
                          type: boolean
                      type: object
                    type: array
                  lastSucceededTime:
                    format: date-time
                    type: string
                  succeeded:
                    type: boolean
                type: object
              clientCertSecretName:
                type: string
              clientEndpoint:
                type: string
              creatingCompleted:
                type: boolean
              lastDefragmentTime:
                format: date-time
                type: string
              lastReadyTransitionTime:
                format: date-time
                type: string
              members:
                items:
                  properties:
                    dbSize:
                      format: int64
                      type: integer
                    id:
                      format: int64
                      type: integer
                    inUseSize:
                      format: int64
                      type: integer
                    leader:
                      type: boolean
                    leaner:
                      type: boolean
                    name:
                      type: string
                    podName:
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              phase:
                type: string
              ready:
                type: boolean
              restored:
                properties:
                  backupTime:
                    format: date-time
                    type: string
                  completed:
                    type: boolean
                  path:
                    type: string
                  restoredTime:
                    format: date-time
                    type: string
                type: object
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
