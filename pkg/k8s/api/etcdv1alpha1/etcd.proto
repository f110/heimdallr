syntax = "proto3";
package heimdallr.api.etcdv1alpha1;
option  go_package              = "go.f110.dev/heimdallr/pkg/k8s/api/etcdv1alpha1";
option (dev.f110.kubeproto.k8s) = {
  domain: "f110.dev",
  sub_group: "etcd",
  version: "v1alpha1",
};

import "kube.proto";
import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";

enum EtcdClusterPhase {
  ETCD_CLUSTER_PHASE_PENDING      = 0 [(dev.f110.kubeproto.value) = { value: "Pending" }];
  ETCD_CLUSTER_PHASE_INITIALIZING = 1 [(dev.f110.kubeproto.value) = { value: "Initializing" }];
  ETCD_CLUSTER_PHASE_CREATING     = 2 [(dev.f110.kubeproto.value) = { value: "Creating" }];
  ETCD_CLUSTER_PHASE_RUNNING      = 3 [(dev.f110.kubeproto.value) = { value: "Running" }];
  ETCD_CLUSTER_PHASE_UPDATING     = 4 [(dev.f110.kubeproto.value) = { value: "Updating" }];
  ETCD_CLUSTER_PHASE_DEGRADING    = 5 [(dev.f110.kubeproto.value) = { value: "Degrading" }];
}

message EtcdCluster {
  EtcdClusterSpec   spec   = 1;
  EtcdClusterStatus status = 2 [(dev.f110.kubeproto.field) = { sub_resource: true }];

  option (dev.f110.kubeproto.kind) = {
    additional_printer_columns: { name: "ready", type: "string", json_path: ".status.ready", description: "Ready", format: "byte", priority: 0 }
    additional_printer_columns: { name: "phase", type: "string", json_path: ".status.phase", description: "Phase", format: "byte", priority: 0 }
    additional_printer_columns: { name: "members", type: "string", json_path: ".spec.members", description: "Members", format: "byte", priority: 0 }
    additional_printer_columns: { name: "age", type: "date", json_path: ".metadata.creationTimestamp", description: "Age", format: "date", priority: 0 }
  };
}

message EtcdClusterSpec {
  int32               members                                                     = 1;
  string              version                                                     = 2;
  optional bool       anti_affinity                                               = 3;
  string              defragment_schedule                                         = 4;
  optional BackupSpec backup                                                      = 6;
  optional k8s.io.api.core.v1.PersistentVolumeClaimTemplate volume_claim_template = 7;
}

message EtcdClusterStatus {
  bool                      ready                                               = 1;
  optional EtcdClusterPhase phase                                               = 2;
  repeated MemberStatus     members                                             = 3;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time last_ready_transition_time = 4;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time last_defragment_time       = 5;
  optional string                                    client_endpoint            = 6;
  optional string                                    client_cert_secret_name    = 7;
  optional BackupStatus                              backup                     = 8;
  optional RestoredStatus                            restored                   = 9;
  optional string                                    restore_from               = 10;
}

message BackupSpec {
  optional int32             interval_in_second = 1;
  optional int32             max_backups        = 2;
  optional BackupStorageSpec storage            = 3;
}

message BackupStorageSpec {
  optional BackupStorageMinIOSpec minio = 1 [(dev.f110.kubeproto.field) = { go_name: "MinIO" }];
  optional BackupStorageGCSSpec   gcs   = 2 [(dev.f110.kubeproto.field) = { go_name: "GCS" }];
}

message BackupStorageMinIOSpec {
  optional ObjectSelector        service_selector    = 1;
  optional AWSCredentialSelector credential_selector = 2;
  optional string                bucket              = 3;
  optional string                path                = 4;
  optional bool                  secure              = 5;
}

message BackupStorageGCSSpec {
  optional string                bucket              = 1;
  optional string                path                = 2;
  optional GCPCredentialSelector credential_selector = 3;
}

message GCPCredentialSelector {
  optional string name                     = 1;
  optional        string namespace         = 2;
  optional string service_account_json_key = 3 [(dev.f110.kubeproto.field) = { go_name: "ServiceAccountJSONKey" }];
}

message ObjectSelector {
  optional string name             = 1;
  optional        string namespace = 2;
}

message AWSCredentialSelector {
  optional string name                  = 1;
  optional        string namespace      = 2;
  optional string access_key_id_key     = 3 [(dev.f110.kubeproto.field) = { go_name: "AccessKeyIDKey" }];
  optional string secret_access_key_key = 4;
}

message PodTemplateSpec {
  optional ObjectMeta metadata = 1;
}

message ObjectMeta {
  map<string, string> labels      = 1;
  map<string, string> annotations = 2;
}

message MemberStatus {
  optional int64  id       = 1;
  optional string name     = 2;
  optional string pod_name = 3;
  optional bool   leader   = 4;
  optional bool   learner  = 5;
  optional string version  = 6;
}

message BackupStatus {
  optional bool succeeded                                                = 1;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time last_succeeded_time = 2;
  repeated BackupStatusHistory                       history             = 3;
}

message BackupStatusHistory {
  optional bool succeeded                                          = 1;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time execute_time  = 2;
  optional string                                    path          = 3;
  optional string                                    etcd_version  = 4;
  optional int64                                     etcd_revision = 5;
  optional string                                    message       = 6;
}

message RestoredStatus {
  optional bool   completed                                        = 1;
  optional string path                                             = 2;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time backup_time   = 3;
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Time restored_time = 4;
}
