// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.1
// source: pkg/rpc/rpc.proto

package rpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserType int32

const (
	UserType_NORMAL          UserType = 0
	UserType_SERVICE_ACCOUNT UserType = 1
)

// Enum value maps for UserType.
var (
	UserType_name = map[int32]string{
		0: "NORMAL",
		1: "SERVICE_ACCOUNT",
	}
	UserType_value = map[string]int32{
		"NORMAL":          0,
		"SERVICE_ACCOUNT": 1,
	}
)

func (x UserType) Enum() *UserType {
	p := new(UserType)
	*p = x
	return p
}

func (x UserType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_rpc_rpc_proto_enumTypes[0].Descriptor()
}

func (UserType) Type() protoreflect.EnumType {
	return &file_pkg_rpc_rpc_proto_enumTypes[0]
}

func (x UserType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserType.Descriptor instead.
func (UserType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

type RequestPing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestPing) Reset() {
	*x = RequestPing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPing) ProtoMessage() {}

func (x *RequestPing) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPing.ProtoReflect.Descriptor instead.
func (*RequestPing) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{0}
}

type ResponsePong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponsePong) Reset() {
	*x = ResponsePong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponsePong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponsePong) ProtoMessage() {}

func (x *ResponsePong) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponsePong.ProtoReflect.Descriptor instead.
func (*ResponsePong) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{1}
}

type RequestMemberList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestMemberList) Reset() {
	*x = RequestMemberList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMemberList) ProtoMessage() {}

func (x *RequestMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMemberList.ProtoReflect.Descriptor instead.
func (*RequestMemberList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{2}
}

type ResponseMemberList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ClusterMember `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseMemberList) Reset() {
	*x = ResponseMemberList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMemberList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMemberList) ProtoMessage() {}

func (x *ResponseMemberList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMemberList.ProtoReflect.Descriptor instead.
func (*ResponseMemberList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseMemberList) GetItems() []*ClusterMember {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestMemberStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestMemberStat) Reset() {
	*x = RequestMemberStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestMemberStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMemberStat) ProtoMessage() {}

func (x *RequestMemberStat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMemberStat.ProtoReflect.Descriptor instead.
func (*RequestMemberStat) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{4}
}

type ResponseMemberStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserCount          int32    `protobuf:"varint,2,opt,name=user_count,json=userCount,proto3" json:"user_count,omitempty"`
	TokenCount         int32    `protobuf:"varint,3,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"`
	ListenedRelayAddrs []string `protobuf:"bytes,4,rep,name=listened_relay_addrs,json=listenedRelayAddrs,proto3" json:"listened_relay_addrs,omitempty"`
}

func (x *ResponseMemberStat) Reset() {
	*x = ResponseMemberStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseMemberStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseMemberStat) ProtoMessage() {}

func (x *ResponseMemberStat) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseMemberStat.ProtoReflect.Descriptor instead.
func (*ResponseMemberStat) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseMemberStat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ResponseMemberStat) GetUserCount() int32 {
	if x != nil {
		return x.UserCount
	}
	return 0
}

func (x *ResponseMemberStat) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

func (x *ResponseMemberStat) GetListenedRelayAddrs() []string {
	if x != nil {
		return x.ListenedRelayAddrs
	}
	return nil
}

type RequestAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestAgentList) Reset() {
	*x = RequestAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestAgentList) ProtoMessage() {}

func (x *RequestAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestAgentList.ProtoReflect.Descriptor instead.
func (*RequestAgentList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{6}
}

type ResponseAgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Agent `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseAgentList) Reset() {
	*x = ResponseAgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseAgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseAgentList) ProtoMessage() {}

func (x *ResponseAgentList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseAgentList.ProtoReflect.Descriptor instead.
func (*ResponseAgentList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseAgentList) GetItems() []*Agent {
	if x != nil {
		return x.Items
	}
	return nil
}

type ClusterMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClusterMember) Reset() {
	*x = ClusterMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMember) ProtoMessage() {}

func (x *ClusterMember) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMember.ProtoReflect.Descriptor instead.
func (*ClusterMember) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *ClusterMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UserItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Roles         []string               `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	MaintainRoles []string               `protobuf:"bytes,3,rep,name=maintain_roles,json=maintainRoles,proto3" json:"maintain_roles,omitempty"`
	Admin         bool                   `protobuf:"varint,4,opt,name=admin,proto3" json:"admin,omitempty"`
	Type          UserType               `protobuf:"varint,5,opt,name=type,proto3,enum=proxy.rpc.UserType" json:"type,omitempty"`
	Comment       string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Tokens        []*AccessTokenItem     `protobuf:"bytes,7,rep,name=tokens,proto3" json:"tokens,omitempty"`
	LoginName     string                 `protobuf:"bytes,8,opt,name=login_name,json=loginName,proto3" json:"login_name,omitempty"`
	LastLogin     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
}

func (x *UserItem) Reset() {
	*x = UserItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserItem) ProtoMessage() {}

func (x *UserItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserItem.ProtoReflect.Descriptor instead.
func (*UserItem) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *UserItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserItem) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserItem) GetMaintainRoles() []string {
	if x != nil {
		return x.MaintainRoles
	}
	return nil
}

func (x *UserItem) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *UserItem) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_NORMAL
}

func (x *UserItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UserItem) GetTokens() []*AccessTokenItem {
	if x != nil {
		return x.Tokens
	}
	return nil
}

func (x *UserItem) GetLoginName() string {
	if x != nil {
		return x.LoginName
	}
	return ""
}

func (x *UserItem) GetLastLogin() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLogin
	}
	return nil
}

type AccessTokenItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value    string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Issuer   string                 `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	IssuedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
}

func (x *AccessTokenItem) Reset() {
	*x = AccessTokenItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTokenItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTokenItem) ProtoMessage() {}

func (x *AccessTokenItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTokenItem.ProtoReflect.Descriptor instead.
func (*AccessTokenItem) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *AccessTokenItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AccessTokenItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *AccessTokenItem) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *AccessTokenItem) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

type RoleItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	System      bool     `protobuf:"varint,4,opt,name=system,proto3" json:"system,omitempty"`
	Backends    []string `protobuf:"bytes,5,rep,name=backends,proto3" json:"backends,omitempty"`
}

func (x *RoleItem) Reset() {
	*x = RoleItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleItem) ProtoMessage() {}

func (x *RoleItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleItem.ProtoReflect.Descriptor instead.
func (*RoleItem) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *RoleItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RoleItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleItem) GetSystem() bool {
	if x != nil {
		return x.System
	}
	return false
}

func (x *RoleItem) GetBackends() []string {
	if x != nil {
		return x.Backends
	}
	return nil
}

type BackendItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Fqdn          string         `protobuf:"bytes,2,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	HttpBackends  []*HTTPBackend `protobuf:"bytes,3,rep,name=http_backends,json=httpBackends,proto3" json:"http_backends,omitempty"`
	SocketBackend *SocketBackend `protobuf:"bytes,4,opt,name=socket_backend,json=socketBackend,proto3" json:"socket_backend,omitempty"`
	Host          string         `protobuf:"bytes,5,opt,name=host,proto3" json:"host,omitempty"`
	Description   string         `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *BackendItem) Reset() {
	*x = BackendItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BackendItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackendItem) ProtoMessage() {}

func (x *BackendItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackendItem.ProtoReflect.Descriptor instead.
func (*BackendItem) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *BackendItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BackendItem) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *BackendItem) GetHttpBackends() []*HTTPBackend {
	if x != nil {
		return x.HttpBackends
	}
	return nil
}

func (x *BackendItem) GetSocketBackend() *SocketBackend {
	if x != nil {
		return x.SocketBackend
	}
	return nil
}

func (x *BackendItem) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *BackendItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type HTTPBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path  string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Agent bool   `protobuf:"varint,2,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *HTTPBackend) Reset() {
	*x = HTTPBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPBackend) ProtoMessage() {}

func (x *HTTPBackend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPBackend.ProtoReflect.Descriptor instead.
func (*HTTPBackend) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *HTTPBackend) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *HTTPBackend) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

type SocketBackend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent bool `protobuf:"varint,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *SocketBackend) Reset() {
	*x = SocketBackend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketBackend) ProtoMessage() {}

func (x *SocketBackend) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketBackend.ProtoReflect.Descriptor instead.
func (*SocketBackend) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *SocketBackend) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

type CertItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber []byte                 `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	CommonName   string                 `protobuf:"bytes,2,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	IssuedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	RevokedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=revoked_at,json=revokedAt,proto3" json:"revoked_at,omitempty"`
	Agent        bool                   `protobuf:"varint,5,opt,name=agent,proto3" json:"agent,omitempty"`
	Comment      string                 `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Certificate  []byte                 `protobuf:"bytes,7,opt,name=certificate,proto3" json:"certificate,omitempty"`
	P12          []byte                 `protobuf:"bytes,8,opt,name=p12,proto3" json:"p12,omitempty"`
	HasP12       bool                   `protobuf:"varint,9,opt,name=has_p12,json=hasP12,proto3" json:"has_p12,omitempty"`
	Device       bool                   `protobuf:"varint,10,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *CertItem) Reset() {
	*x = CertItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertItem) ProtoMessage() {}

func (x *CertItem) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertItem.ProtoReflect.Descriptor instead.
func (*CertItem) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *CertItem) GetSerialNumber() []byte {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

func (x *CertItem) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *CertItem) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *CertItem) GetRevokedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RevokedAt
	}
	return nil
}

func (x *CertItem) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

func (x *CertItem) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *CertItem) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

func (x *CertItem) GetP12() []byte {
	if x != nil {
		return x.P12
	}
	return nil
}

func (x *CertItem) GetHasP12() bool {
	if x != nil {
		return x.HasP12
	}
	return false
}

func (x *CertItem) GetDevice() bool {
	if x != nil {
		return x.Device
	}
	return false
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FromAddr    string                 `protobuf:"bytes,2,opt,name=from_addr,json=fromAddr,proto3" json:"from_addr,omitempty"`
	ConnectedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *Agent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Agent) GetFromAddr() string {
	if x != nil {
		return x.FromAddr
	}
	return ""
}

func (x *Agent) GetConnectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnectedAt
	}
	return nil
}

type RequestUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role           string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	ServiceAccount bool   `protobuf:"varint,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *RequestUserList) Reset() {
	*x = RequestUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserList) ProtoMessage() {}

func (x *RequestUserList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserList.ProtoReflect.Descriptor instead.
func (*RequestUserList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{17}
}

func (x *RequestUserList) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RequestUserList) GetServiceAccount() bool {
	if x != nil {
		return x.ServiceAccount
	}
	return false
}

type ResponseUserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseUserList) Reset() {
	*x = ResponseUserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserList) ProtoMessage() {}

func (x *ResponseUserList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserList.ProtoReflect.Descriptor instead.
func (*ResponseUserList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *ResponseUserList) GetItems() []*UserItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestUserAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role    string   `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	Type    UserType `protobuf:"varint,3,opt,name=type,proto3,enum=proxy.rpc.UserType" json:"type,omitempty"`
	Comment string   `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *RequestUserAdd) Reset() {
	*x = RequestUserAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserAdd) ProtoMessage() {}

func (x *RequestUserAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserAdd.ProtoReflect.Descriptor instead.
func (*RequestUserAdd) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *RequestUserAdd) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestUserAdd) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *RequestUserAdd) GetType() UserType {
	if x != nil {
		return x.Type
	}
	return UserType_NORMAL
}

func (x *RequestUserAdd) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ResponseUserAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseUserAdd) Reset() {
	*x = ResponseUserAdd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserAdd) ProtoMessage() {}

func (x *ResponseUserAdd) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserAdd.ProtoReflect.Descriptor instead.
func (*ResponseUserAdd) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *ResponseUserAdd) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestUserEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	User *UserItem `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *RequestUserEdit) Reset() {
	*x = RequestUserEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserEdit) ProtoMessage() {}

func (x *RequestUserEdit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserEdit.ProtoReflect.Descriptor instead.
func (*RequestUserEdit) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *RequestUserEdit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestUserEdit) GetUser() *UserItem {
	if x != nil {
		return x.User
	}
	return nil
}

type ResponseUserEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseUserEdit) Reset() {
	*x = ResponseUserEdit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserEdit) ProtoMessage() {}

func (x *ResponseUserEdit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserEdit.ProtoReflect.Descriptor instead.
func (*ResponseUserEdit) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *ResponseUserEdit) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestUserDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RequestUserDel) Reset() {
	*x = RequestUserDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserDel) ProtoMessage() {}

func (x *RequestUserDel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserDel.ProtoReflect.Descriptor instead.
func (*RequestUserDel) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *RequestUserDel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestUserDel) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ResponseUserDel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseUserDel) Reset() {
	*x = ResponseUserDel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserDel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserDel) ProtoMessage() {}

func (x *ResponseUserDel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserDel.ProtoReflect.Descriptor instead.
func (*ResponseUserDel) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{24}
}

func (x *ResponseUserDel) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestUserGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	WithTokens bool   `protobuf:"varint,2,opt,name=with_tokens,json=withTokens,proto3" json:"with_tokens,omitempty"`
}

func (x *RequestUserGet) Reset() {
	*x = RequestUserGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUserGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUserGet) ProtoMessage() {}

func (x *RequestUserGet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUserGet.ProtoReflect.Descriptor instead.
func (*RequestUserGet) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *RequestUserGet) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestUserGet) GetWithTokens() bool {
	if x != nil {
		return x.WithTokens
	}
	return false
}

type ResponseUserGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserItem `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Ok   bool      `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseUserGet) Reset() {
	*x = ResponseUserGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUserGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUserGet) ProtoMessage() {}

func (x *ResponseUserGet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUserGet.ProtoReflect.Descriptor instead.
func (*ResponseUserGet) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *ResponseUserGet) GetUser() *UserItem {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ResponseUserGet) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestBecomeMaintainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Role string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *RequestBecomeMaintainer) Reset() {
	*x = RequestBecomeMaintainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBecomeMaintainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBecomeMaintainer) ProtoMessage() {}

func (x *RequestBecomeMaintainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBecomeMaintainer.ProtoReflect.Descriptor instead.
func (*RequestBecomeMaintainer) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *RequestBecomeMaintainer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestBecomeMaintainer) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type ResponseBecomeMaintainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseBecomeMaintainer) Reset() {
	*x = ResponseBecomeMaintainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBecomeMaintainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBecomeMaintainer) ProtoMessage() {}

func (x *ResponseBecomeMaintainer) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBecomeMaintainer.ProtoReflect.Descriptor instead.
func (*ResponseBecomeMaintainer) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *ResponseBecomeMaintainer) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestToggleAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RequestToggleAdmin) Reset() {
	*x = RequestToggleAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestToggleAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestToggleAdmin) ProtoMessage() {}

func (x *RequestToggleAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestToggleAdmin.ProtoReflect.Descriptor instead.
func (*RequestToggleAdmin) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *RequestToggleAdmin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ResponseToggleAdmin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseToggleAdmin) Reset() {
	*x = ResponseToggleAdmin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseToggleAdmin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseToggleAdmin) ProtoMessage() {}

func (x *ResponseToggleAdmin) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseToggleAdmin.ProtoReflect.Descriptor instead.
func (*ResponseToggleAdmin) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *ResponseToggleAdmin) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RequestTokenNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RequestTokenNew) Reset() {
	*x = RequestTokenNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTokenNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTokenNew) ProtoMessage() {}

func (x *RequestTokenNew) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTokenNew.ProtoReflect.Descriptor instead.
func (*RequestTokenNew) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *RequestTokenNew) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RequestTokenNew) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ResponseTokenNew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *AccessTokenItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ResponseTokenNew) Reset() {
	*x = ResponseTokenNew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseTokenNew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseTokenNew) ProtoMessage() {}

func (x *ResponseTokenNew) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseTokenNew.ProtoReflect.Descriptor instead.
func (*ResponseTokenNew) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *ResponseTokenNew) GetItem() *AccessTokenItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type RequestRoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestRoleList) Reset() {
	*x = RequestRoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRoleList) ProtoMessage() {}

func (x *RequestRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRoleList.ProtoReflect.Descriptor instead.
func (*RequestRoleList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{33}
}

type ResponseRoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*RoleItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseRoleList) Reset() {
	*x = ResponseRoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseRoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseRoleList) ProtoMessage() {}

func (x *ResponseRoleList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseRoleList.ProtoReflect.Descriptor instead.
func (*ResponseRoleList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{34}
}

func (x *ResponseRoleList) GetItems() []*RoleItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestBackendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agent bool `protobuf:"varint,1,opt,name=agent,proto3" json:"agent,omitempty"`
}

func (x *RequestBackendList) Reset() {
	*x = RequestBackendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestBackendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestBackendList) ProtoMessage() {}

func (x *RequestBackendList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestBackendList.ProtoReflect.Descriptor instead.
func (*RequestBackendList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *RequestBackendList) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

type ResponseBackendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BackendItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseBackendList) Reset() {
	*x = ResponseBackendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseBackendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseBackendList) ProtoMessage() {}

func (x *ResponseBackendList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseBackendList.ProtoReflect.Descriptor instead.
func (*ResponseBackendList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{36}
}

func (x *ResponseBackendList) GetItems() []*BackendItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestGetSignedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonName string `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Device     bool   `protobuf:"varint,2,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *RequestGetSignedList) Reset() {
	*x = RequestGetSignedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetSignedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetSignedList) ProtoMessage() {}

func (x *RequestGetSignedList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetSignedList.ProtoReflect.Descriptor instead.
func (*RequestGetSignedList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *RequestGetSignedList) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *RequestGetSignedList) GetDevice() bool {
	if x != nil {
		return x.Device
	}
	return false
}

type ResponseGetSignedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CertItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseGetSignedList) Reset() {
	*x = ResponseGetSignedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetSignedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetSignedList) ProtoMessage() {}

func (x *ResponseGetSignedList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetSignedList.ProtoReflect.Descriptor instead.
func (*ResponseGetSignedList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{38}
}

func (x *ResponseGetSignedList) GetItems() []*CertItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestNewClientCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonName         string `protobuf:"bytes,1,opt,name=common_name,json=commonName,proto3" json:"common_name,omitempty"`
	Password           string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Comment            string `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	Agent              bool   `protobuf:"varint,4,opt,name=agent,proto3" json:"agent,omitempty"`
	Csr                string `protobuf:"bytes,5,opt,name=csr,proto3" json:"csr,omitempty"`
	KeyType            string `protobuf:"bytes,6,opt,name=key_type,json=keyType,proto3" json:"key_type,omitempty"`
	KeyBits            int32  `protobuf:"varint,7,opt,name=key_bits,json=keyBits,proto3" json:"key_bits,omitempty"`
	OverrideCommonName string `protobuf:"bytes,8,opt,name=override_common_name,json=overrideCommonName,proto3" json:"override_common_name,omitempty"`
	Device             bool   `protobuf:"varint,9,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *RequestNewClientCert) Reset() {
	*x = RequestNewClientCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNewClientCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNewClientCert) ProtoMessage() {}

func (x *RequestNewClientCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNewClientCert.ProtoReflect.Descriptor instead.
func (*RequestNewClientCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *RequestNewClientCert) GetCommonName() string {
	if x != nil {
		return x.CommonName
	}
	return ""
}

func (x *RequestNewClientCert) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RequestNewClientCert) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *RequestNewClientCert) GetAgent() bool {
	if x != nil {
		return x.Agent
	}
	return false
}

func (x *RequestNewClientCert) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

func (x *RequestNewClientCert) GetKeyType() string {
	if x != nil {
		return x.KeyType
	}
	return ""
}

func (x *RequestNewClientCert) GetKeyBits() int32 {
	if x != nil {
		return x.KeyBits
	}
	return 0
}

func (x *RequestNewClientCert) GetOverrideCommonName() string {
	if x != nil {
		return x.OverrideCommonName
	}
	return ""
}

func (x *RequestNewClientCert) GetDevice() bool {
	if x != nil {
		return x.Device
	}
	return false
}

type ResponseNewClientCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok          bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Certificate *CertItem `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *ResponseNewClientCert) Reset() {
	*x = ResponseNewClientCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNewClientCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNewClientCert) ProtoMessage() {}

func (x *ResponseNewClientCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNewClientCert.ProtoReflect.Descriptor instead.
func (*ResponseNewClientCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{40}
}

func (x *ResponseNewClientCert) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ResponseNewClientCert) GetCertificate() *CertItem {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type CARequestRevoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *CARequestRevoke) Reset() {
	*x = CARequestRevoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CARequestRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CARequestRevoke) ProtoMessage() {}

func (x *CARequestRevoke) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CARequestRevoke.ProtoReflect.Descriptor instead.
func (*CARequestRevoke) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{41}
}

func (x *CARequestRevoke) GetSerialNumber() []byte {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

type CAResponseRevoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *CAResponseRevoke) Reset() {
	*x = CAResponseRevoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAResponseRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAResponseRevoke) ProtoMessage() {}

func (x *CAResponseRevoke) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAResponseRevoke.ProtoReflect.Descriptor instead.
func (*CAResponseRevoke) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{42}
}

func (x *CAResponseRevoke) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CARequestGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialNumber []byte `protobuf:"bytes,1,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
}

func (x *CARequestGet) Reset() {
	*x = CARequestGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CARequestGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CARequestGet) ProtoMessage() {}

func (x *CARequestGet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CARequestGet.ProtoReflect.Descriptor instead.
func (*CARequestGet) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{43}
}

func (x *CARequestGet) GetSerialNumber() []byte {
	if x != nil {
		return x.SerialNumber
	}
	return nil
}

type CAResponseGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *CertItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CAResponseGet) Reset() {
	*x = CAResponseGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CAResponseGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CAResponseGet) ProtoMessage() {}

func (x *CAResponseGet) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CAResponseGet.ProtoReflect.Descriptor instead.
func (*CAResponseGet) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{44}
}

func (x *CAResponseGet) GetItem() *CertItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type RequestGetRevokedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestGetRevokedList) Reset() {
	*x = RequestGetRevokedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetRevokedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetRevokedList) ProtoMessage() {}

func (x *RequestGetRevokedList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetRevokedList.ProtoReflect.Descriptor instead.
func (*RequestGetRevokedList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{45}
}

type ResponseGetRevokedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CertItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseGetRevokedList) Reset() {
	*x = ResponseGetRevokedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetRevokedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetRevokedList) ProtoMessage() {}

func (x *ResponseGetRevokedList) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetRevokedList.ProtoReflect.Descriptor instead.
func (*ResponseGetRevokedList) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{46}
}

func (x *ResponseGetRevokedList) GetItems() []*CertItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestWatchRevokedCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestWatchRevokedCert) Reset() {
	*x = RequestWatchRevokedCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWatchRevokedCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWatchRevokedCert) ProtoMessage() {}

func (x *RequestWatchRevokedCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWatchRevokedCert.ProtoReflect.Descriptor instead.
func (*RequestWatchRevokedCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{47}
}

type ResponseWatchRevokedCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items  []*CertItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Update bool        `protobuf:"varint,2,opt,name=update,proto3" json:"update,omitempty"`
}

func (x *ResponseWatchRevokedCert) Reset() {
	*x = ResponseWatchRevokedCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWatchRevokedCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWatchRevokedCert) ProtoMessage() {}

func (x *ResponseWatchRevokedCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWatchRevokedCert.ProtoReflect.Descriptor instead.
func (*ResponseWatchRevokedCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{48}
}

func (x *ResponseWatchRevokedCert) GetItems() []*CertItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ResponseWatchRevokedCert) GetUpdate() bool {
	if x != nil {
		return x.Update
	}
	return false
}

type RequestNewServerCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SigningRequest []byte `protobuf:"bytes,1,opt,name=signing_request,json=signingRequest,proto3" json:"signing_request,omitempty"`
}

func (x *RequestNewServerCert) Reset() {
	*x = RequestNewServerCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestNewServerCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestNewServerCert) ProtoMessage() {}

func (x *RequestNewServerCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestNewServerCert.ProtoReflect.Descriptor instead.
func (*RequestNewServerCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{49}
}

func (x *RequestNewServerCert) GetSigningRequest() []byte {
	if x != nil {
		return x.SigningRequest
	}
	return nil
}

type ResponseNewServerCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Certificate []byte `protobuf:"bytes,1,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (x *ResponseNewServerCert) Reset() {
	*x = ResponseNewServerCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNewServerCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNewServerCert) ProtoMessage() {}

func (x *ResponseNewServerCert) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNewServerCert.ProtoReflect.Descriptor instead.
func (*ResponseNewServerCert) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{50}
}

func (x *ResponseNewServerCert) GetCertificate() []byte {
	if x != nil {
		return x.Certificate
	}
	return nil
}

type RequestSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RequestSignRequest) Reset() {
	*x = RequestSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSignRequest) ProtoMessage() {}

func (x *RequestSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSignRequest.ProtoReflect.Descriptor instead.
func (*RequestSignRequest) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{51}
}

func (x *RequestSignRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ResponseSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ResponseSignResponse) Reset() {
	*x = ResponseSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSignResponse) ProtoMessage() {}

func (x *ResponseSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSignResponse.ProtoReflect.Descriptor instead.
func (*ResponseSignResponse) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{52}
}

func (x *ResponseSignResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RequestGetPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestGetPublicKey) Reset() {
	*x = RequestGetPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetPublicKey) ProtoMessage() {}

func (x *RequestGetPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetPublicKey.ProtoReflect.Descriptor instead.
func (*RequestGetPublicKey) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{53}
}

type ResponseGetPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey []byte `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (x *ResponseGetPublicKey) Reset() {
	*x = ResponseGetPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetPublicKey) ProtoMessage() {}

func (x *ResponseGetPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetPublicKey.ProtoReflect.Descriptor instead.
func (*ResponseGetPublicKey) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{54}
}

func (x *ResponseGetPublicKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type ErrorUnauthorized struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *ErrorUnauthorized) Reset() {
	*x = ErrorUnauthorized{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorUnauthorized) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorUnauthorized) ProtoMessage() {}

func (x *ErrorUnauthorized) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorUnauthorized.ProtoReflect.Descriptor instead.
func (*ErrorUnauthorized) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{55}
}

func (x *ErrorUnauthorized) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type RequestGetBackends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestGetBackends) Reset() {
	*x = RequestGetBackends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetBackends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetBackends) ProtoMessage() {}

func (x *RequestGetBackends) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetBackends.ProtoReflect.Descriptor instead.
func (*RequestGetBackends) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{56}
}

type ResponseGetBackends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*BackendItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseGetBackends) Reset() {
	*x = ResponseGetBackends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_rpc_rpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetBackends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetBackends) ProtoMessage() {}

func (x *ResponseGetBackends) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_rpc_rpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetBackends.ProtoReflect.Descriptor instead.
func (*ResponseGetBackends) Descriptor() ([]byte, []int) {
	return file_pkg_rpc_rpc_proto_rawDescGZIP(), []int{57}
}

func (x *ResponseGetBackends) GetItems() []*BackendItem {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_pkg_rpc_rpc_proto protoreflect.FileDescriptor

var file_pkg_rpc_rpc_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x0e,
	0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x6e, 0x67, 0x22, 0x13,
	0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x22, 0x96,
	0x01, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1f, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbe, 0x02, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x06,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x22, 0x8c, 0x01, 0x0a, 0x0f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x71,
	0x64, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x71, 0x64, 0x6e, 0x12, 0x3b,
	0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x0c, 0x68,
	0x74, 0x74, 0x70, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x52, 0x0d, 0x73,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x0b, 0x48, 0x54, 0x54, 0x50, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x53,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x22, 0xd9, 0x02, 0x0a, 0x08, 0x43, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x31, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x31, 0x32, 0x12, 0x17, 0x0a,
	0x07, 0x68, 0x61, 0x73, 0x5f, 0x70, 0x31, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x68, 0x61, 0x73, 0x50, 0x31, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x77,
	0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x77, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22,
	0x21, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x4a, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x22,
	0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x64,
	0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x34, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x21, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x41, 0x0a, 0x0e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x4a,
	0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x3d, 0x0a, 0x17, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x24, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x3e, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4e, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x10, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x42, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x95,
	0x02, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x73, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x63, 0x73, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x62, 0x69, 0x74, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x42, 0x69, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x14,
	0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x35, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x36, 0x0a, 0x0f, 0x43, 0x41, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x22,
	0x0a, 0x10, 0x43, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x33, 0x0a, 0x0c, 0x43, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x0d, 0x43, 0x41, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x19, 0x0a, 0x17, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x22, 0x5d, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x65, 0x72,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43,
	0x65, 0x72, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x35, 0x0a, 0x14, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x22, 0x2f, 0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x22, 0x43, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x2c,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x2b, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x01, 0x32, 0xe7, 0x01, 0x0a, 0x07, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x49, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x1a, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x32, 0x93, 0x06, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x37, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x6e, 0x67, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x43, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x12, 0x43, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x64, 0x69, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x45, 0x64,
	0x69, 0x74, 0x12, 0x40, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x47, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x10, 0x42, 0x65, 0x63, 0x6f, 0x6d, 0x65,
	0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x65,
	0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x1a, 0x23,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x65, 0x63, 0x6f, 0x6d, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0b, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x43, 0x0a, 0x08, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x12, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4e, 0x65, 0x77, 0x12, 0x43, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x0b, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xc5, 0x04, 0x0a, 0x14, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x52, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x77,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x12, 0x52, 0x0a, 0x0d, 0x4e, 0x65,
	0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x65, 0x72, 0x74, 0x12, 0x41,
	0x0a, 0x06, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x41, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x12, 0x38, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x41, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65,
	0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x41,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x12, 0x55, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x5d, 0x0a, 0x10, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x43, 0x65, 0x72, 0x74, 0x30,
	0x01, 0x32, 0x54, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x73, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x6f, 0x2e, 0x66, 0x31,
	0x31, 0x30, 0x2e, 0x64, 0x65, 0x76, 0x2f, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x72,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_rpc_rpc_proto_rawDescOnce sync.Once
	file_pkg_rpc_rpc_proto_rawDescData = file_pkg_rpc_rpc_proto_rawDesc
)

func file_pkg_rpc_rpc_proto_rawDescGZIP() []byte {
	file_pkg_rpc_rpc_proto_rawDescOnce.Do(func() {
		file_pkg_rpc_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_rpc_rpc_proto_rawDescData)
	})
	return file_pkg_rpc_rpc_proto_rawDescData
}

var file_pkg_rpc_rpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_rpc_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_pkg_rpc_rpc_proto_goTypes = []interface{}{
	(UserType)(0),                    // 0: proxy.rpc.UserType
	(*RequestPing)(nil),              // 1: proxy.rpc.RequestPing
	(*ResponsePong)(nil),             // 2: proxy.rpc.ResponsePong
	(*RequestMemberList)(nil),        // 3: proxy.rpc.RequestMemberList
	(*ResponseMemberList)(nil),       // 4: proxy.rpc.ResponseMemberList
	(*RequestMemberStat)(nil),        // 5: proxy.rpc.RequestMemberStat
	(*ResponseMemberStat)(nil),       // 6: proxy.rpc.ResponseMemberStat
	(*RequestAgentList)(nil),         // 7: proxy.rpc.RequestAgentList
	(*ResponseAgentList)(nil),        // 8: proxy.rpc.ResponseAgentList
	(*ClusterMember)(nil),            // 9: proxy.rpc.ClusterMember
	(*UserItem)(nil),                 // 10: proxy.rpc.UserItem
	(*AccessTokenItem)(nil),          // 11: proxy.rpc.AccessTokenItem
	(*RoleItem)(nil),                 // 12: proxy.rpc.RoleItem
	(*BackendItem)(nil),              // 13: proxy.rpc.BackendItem
	(*HTTPBackend)(nil),              // 14: proxy.rpc.HTTPBackend
	(*SocketBackend)(nil),            // 15: proxy.rpc.SocketBackend
	(*CertItem)(nil),                 // 16: proxy.rpc.CertItem
	(*Agent)(nil),                    // 17: proxy.rpc.Agent
	(*RequestUserList)(nil),          // 18: proxy.rpc.RequestUserList
	(*ResponseUserList)(nil),         // 19: proxy.rpc.ResponseUserList
	(*RequestUserAdd)(nil),           // 20: proxy.rpc.RequestUserAdd
	(*ResponseUserAdd)(nil),          // 21: proxy.rpc.ResponseUserAdd
	(*RequestUserEdit)(nil),          // 22: proxy.rpc.RequestUserEdit
	(*ResponseUserEdit)(nil),         // 23: proxy.rpc.ResponseUserEdit
	(*RequestUserDel)(nil),           // 24: proxy.rpc.RequestUserDel
	(*ResponseUserDel)(nil),          // 25: proxy.rpc.ResponseUserDel
	(*RequestUserGet)(nil),           // 26: proxy.rpc.RequestUserGet
	(*ResponseUserGet)(nil),          // 27: proxy.rpc.ResponseUserGet
	(*RequestBecomeMaintainer)(nil),  // 28: proxy.rpc.RequestBecomeMaintainer
	(*ResponseBecomeMaintainer)(nil), // 29: proxy.rpc.ResponseBecomeMaintainer
	(*RequestToggleAdmin)(nil),       // 30: proxy.rpc.RequestToggleAdmin
	(*ResponseToggleAdmin)(nil),      // 31: proxy.rpc.ResponseToggleAdmin
	(*RequestTokenNew)(nil),          // 32: proxy.rpc.RequestTokenNew
	(*ResponseTokenNew)(nil),         // 33: proxy.rpc.ResponseTokenNew
	(*RequestRoleList)(nil),          // 34: proxy.rpc.RequestRoleList
	(*ResponseRoleList)(nil),         // 35: proxy.rpc.ResponseRoleList
	(*RequestBackendList)(nil),       // 36: proxy.rpc.RequestBackendList
	(*ResponseBackendList)(nil),      // 37: proxy.rpc.ResponseBackendList
	(*RequestGetSignedList)(nil),     // 38: proxy.rpc.RequestGetSignedList
	(*ResponseGetSignedList)(nil),    // 39: proxy.rpc.ResponseGetSignedList
	(*RequestNewClientCert)(nil),     // 40: proxy.rpc.RequestNewClientCert
	(*ResponseNewClientCert)(nil),    // 41: proxy.rpc.ResponseNewClientCert
	(*CARequestRevoke)(nil),          // 42: proxy.rpc.CARequestRevoke
	(*CAResponseRevoke)(nil),         // 43: proxy.rpc.CAResponseRevoke
	(*CARequestGet)(nil),             // 44: proxy.rpc.CARequestGet
	(*CAResponseGet)(nil),            // 45: proxy.rpc.CAResponseGet
	(*RequestGetRevokedList)(nil),    // 46: proxy.rpc.RequestGetRevokedList
	(*ResponseGetRevokedList)(nil),   // 47: proxy.rpc.ResponseGetRevokedList
	(*RequestWatchRevokedCert)(nil),  // 48: proxy.rpc.RequestWatchRevokedCert
	(*ResponseWatchRevokedCert)(nil), // 49: proxy.rpc.ResponseWatchRevokedCert
	(*RequestNewServerCert)(nil),     // 50: proxy.rpc.RequestNewServerCert
	(*ResponseNewServerCert)(nil),    // 51: proxy.rpc.ResponseNewServerCert
	(*RequestSignRequest)(nil),       // 52: proxy.rpc.RequestSignRequest
	(*ResponseSignResponse)(nil),     // 53: proxy.rpc.ResponseSignResponse
	(*RequestGetPublicKey)(nil),      // 54: proxy.rpc.RequestGetPublicKey
	(*ResponseGetPublicKey)(nil),     // 55: proxy.rpc.ResponseGetPublicKey
	(*ErrorUnauthorized)(nil),        // 56: proxy.rpc.ErrorUnauthorized
	(*RequestGetBackends)(nil),       // 57: proxy.rpc.RequestGetBackends
	(*ResponseGetBackends)(nil),      // 58: proxy.rpc.ResponseGetBackends
	(*timestamppb.Timestamp)(nil),    // 59: google.protobuf.Timestamp
}
var file_pkg_rpc_rpc_proto_depIdxs = []int32{
	9,  // 0: proxy.rpc.ResponseMemberList.items:type_name -> proxy.rpc.ClusterMember
	17, // 1: proxy.rpc.ResponseAgentList.items:type_name -> proxy.rpc.Agent
	0,  // 2: proxy.rpc.UserItem.type:type_name -> proxy.rpc.UserType
	11, // 3: proxy.rpc.UserItem.tokens:type_name -> proxy.rpc.AccessTokenItem
	59, // 4: proxy.rpc.UserItem.last_login:type_name -> google.protobuf.Timestamp
	59, // 5: proxy.rpc.AccessTokenItem.issued_at:type_name -> google.protobuf.Timestamp
	14, // 6: proxy.rpc.BackendItem.http_backends:type_name -> proxy.rpc.HTTPBackend
	15, // 7: proxy.rpc.BackendItem.socket_backend:type_name -> proxy.rpc.SocketBackend
	59, // 8: proxy.rpc.CertItem.issued_at:type_name -> google.protobuf.Timestamp
	59, // 9: proxy.rpc.CertItem.revoked_at:type_name -> google.protobuf.Timestamp
	59, // 10: proxy.rpc.Agent.connected_at:type_name -> google.protobuf.Timestamp
	10, // 11: proxy.rpc.ResponseUserList.items:type_name -> proxy.rpc.UserItem
	0,  // 12: proxy.rpc.RequestUserAdd.type:type_name -> proxy.rpc.UserType
	10, // 13: proxy.rpc.RequestUserEdit.user:type_name -> proxy.rpc.UserItem
	10, // 14: proxy.rpc.ResponseUserGet.user:type_name -> proxy.rpc.UserItem
	11, // 15: proxy.rpc.ResponseTokenNew.item:type_name -> proxy.rpc.AccessTokenItem
	12, // 16: proxy.rpc.ResponseRoleList.items:type_name -> proxy.rpc.RoleItem
	13, // 17: proxy.rpc.ResponseBackendList.items:type_name -> proxy.rpc.BackendItem
	16, // 18: proxy.rpc.ResponseGetSignedList.items:type_name -> proxy.rpc.CertItem
	16, // 19: proxy.rpc.ResponseNewClientCert.certificate:type_name -> proxy.rpc.CertItem
	16, // 20: proxy.rpc.CAResponseGet.item:type_name -> proxy.rpc.CertItem
	16, // 21: proxy.rpc.ResponseGetRevokedList.items:type_name -> proxy.rpc.CertItem
	16, // 22: proxy.rpc.ResponseWatchRevokedCert.items:type_name -> proxy.rpc.CertItem
	13, // 23: proxy.rpc.ResponseGetBackends.items:type_name -> proxy.rpc.BackendItem
	3,  // 24: proxy.rpc.Cluster.MemberList:input_type -> proxy.rpc.RequestMemberList
	5,  // 25: proxy.rpc.Cluster.MemberStat:input_type -> proxy.rpc.RequestMemberStat
	7,  // 26: proxy.rpc.Cluster.AgentList:input_type -> proxy.rpc.RequestAgentList
	1,  // 27: proxy.rpc.Admin.Ping:input_type -> proxy.rpc.RequestPing
	18, // 28: proxy.rpc.Admin.UserList:input_type -> proxy.rpc.RequestUserList
	20, // 29: proxy.rpc.Admin.UserAdd:input_type -> proxy.rpc.RequestUserAdd
	22, // 30: proxy.rpc.Admin.UserEdit:input_type -> proxy.rpc.RequestUserEdit
	24, // 31: proxy.rpc.Admin.UserDel:input_type -> proxy.rpc.RequestUserDel
	26, // 32: proxy.rpc.Admin.UserGet:input_type -> proxy.rpc.RequestUserGet
	28, // 33: proxy.rpc.Admin.BecomeMaintainer:input_type -> proxy.rpc.RequestBecomeMaintainer
	30, // 34: proxy.rpc.Admin.ToggleAdmin:input_type -> proxy.rpc.RequestToggleAdmin
	32, // 35: proxy.rpc.Admin.TokenNew:input_type -> proxy.rpc.RequestTokenNew
	34, // 36: proxy.rpc.Admin.RoleList:input_type -> proxy.rpc.RequestRoleList
	36, // 37: proxy.rpc.Admin.BackendList:input_type -> proxy.rpc.RequestBackendList
	38, // 38: proxy.rpc.CertificateAuthority.GetSignedList:input_type -> proxy.rpc.RequestGetSignedList
	40, // 39: proxy.rpc.CertificateAuthority.NewClientCert:input_type -> proxy.rpc.RequestNewClientCert
	50, // 40: proxy.rpc.CertificateAuthority.NewServerCert:input_type -> proxy.rpc.RequestNewServerCert
	42, // 41: proxy.rpc.CertificateAuthority.Revoke:input_type -> proxy.rpc.CARequestRevoke
	44, // 42: proxy.rpc.CertificateAuthority.Get:input_type -> proxy.rpc.CARequestGet
	46, // 43: proxy.rpc.CertificateAuthority.GetRevokedList:input_type -> proxy.rpc.RequestGetRevokedList
	48, // 44: proxy.rpc.CertificateAuthority.WatchRevokedCert:input_type -> proxy.rpc.RequestWatchRevokedCert
	57, // 45: proxy.rpc.User.GetBackends:input_type -> proxy.rpc.RequestGetBackends
	4,  // 46: proxy.rpc.Cluster.MemberList:output_type -> proxy.rpc.ResponseMemberList
	6,  // 47: proxy.rpc.Cluster.MemberStat:output_type -> proxy.rpc.ResponseMemberStat
	8,  // 48: proxy.rpc.Cluster.AgentList:output_type -> proxy.rpc.ResponseAgentList
	2,  // 49: proxy.rpc.Admin.Ping:output_type -> proxy.rpc.ResponsePong
	19, // 50: proxy.rpc.Admin.UserList:output_type -> proxy.rpc.ResponseUserList
	21, // 51: proxy.rpc.Admin.UserAdd:output_type -> proxy.rpc.ResponseUserAdd
	23, // 52: proxy.rpc.Admin.UserEdit:output_type -> proxy.rpc.ResponseUserEdit
	25, // 53: proxy.rpc.Admin.UserDel:output_type -> proxy.rpc.ResponseUserDel
	27, // 54: proxy.rpc.Admin.UserGet:output_type -> proxy.rpc.ResponseUserGet
	29, // 55: proxy.rpc.Admin.BecomeMaintainer:output_type -> proxy.rpc.ResponseBecomeMaintainer
	31, // 56: proxy.rpc.Admin.ToggleAdmin:output_type -> proxy.rpc.ResponseToggleAdmin
	33, // 57: proxy.rpc.Admin.TokenNew:output_type -> proxy.rpc.ResponseTokenNew
	35, // 58: proxy.rpc.Admin.RoleList:output_type -> proxy.rpc.ResponseRoleList
	37, // 59: proxy.rpc.Admin.BackendList:output_type -> proxy.rpc.ResponseBackendList
	39, // 60: proxy.rpc.CertificateAuthority.GetSignedList:output_type -> proxy.rpc.ResponseGetSignedList
	41, // 61: proxy.rpc.CertificateAuthority.NewClientCert:output_type -> proxy.rpc.ResponseNewClientCert
	51, // 62: proxy.rpc.CertificateAuthority.NewServerCert:output_type -> proxy.rpc.ResponseNewServerCert
	43, // 63: proxy.rpc.CertificateAuthority.Revoke:output_type -> proxy.rpc.CAResponseRevoke
	45, // 64: proxy.rpc.CertificateAuthority.Get:output_type -> proxy.rpc.CAResponseGet
	47, // 65: proxy.rpc.CertificateAuthority.GetRevokedList:output_type -> proxy.rpc.ResponseGetRevokedList
	49, // 66: proxy.rpc.CertificateAuthority.WatchRevokedCert:output_type -> proxy.rpc.ResponseWatchRevokedCert
	58, // 67: proxy.rpc.User.GetBackends:output_type -> proxy.rpc.ResponseGetBackends
	46, // [46:68] is the sub-list for method output_type
	24, // [24:46] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_pkg_rpc_rpc_proto_init() }
func file_pkg_rpc_rpc_proto_init() {
	if File_pkg_rpc_rpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_rpc_rpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponsePong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMemberList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMemberList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestMemberStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseMemberStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseAgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTokenItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BackendItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocketBackend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserAdd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserEdit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserDel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUserGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUserGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBecomeMaintainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBecomeMaintainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestToggleAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseToggleAdmin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTokenNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseTokenNew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestRoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseRoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestBackendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseBackendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetSignedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetSignedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNewClientCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNewClientCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CARequestRevoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAResponseRevoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CARequestGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CAResponseGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetRevokedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetRevokedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWatchRevokedCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWatchRevokedCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestNewServerCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNewServerCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorUnauthorized); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetBackends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_rpc_rpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetBackends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_rpc_rpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_pkg_rpc_rpc_proto_goTypes,
		DependencyIndexes: file_pkg_rpc_rpc_proto_depIdxs,
		EnumInfos:         file_pkg_rpc_rpc_proto_enumTypes,
		MessageInfos:      file_pkg_rpc_rpc_proto_msgTypes,
	}.Build()
	File_pkg_rpc_rpc_proto = out.File
	file_pkg_rpc_rpc_proto_rawDesc = nil
	file_pkg_rpc_rpc_proto_goTypes = nil
	file_pkg_rpc_rpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClusterClient is the client API for Cluster service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterClient interface {
	MemberList(ctx context.Context, in *RequestMemberList, opts ...grpc.CallOption) (*ResponseMemberList, error)
	MemberStat(ctx context.Context, in *RequestMemberStat, opts ...grpc.CallOption) (*ResponseMemberStat, error)
	AgentList(ctx context.Context, in *RequestAgentList, opts ...grpc.CallOption) (*ResponseAgentList, error)
}

type clusterClient struct {
	cc grpc.ClientConnInterface
}

func NewClusterClient(cc grpc.ClientConnInterface) ClusterClient {
	return &clusterClient{cc}
}

func (c *clusterClient) MemberList(ctx context.Context, in *RequestMemberList, opts ...grpc.CallOption) (*ResponseMemberList, error) {
	out := new(ResponseMemberList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Cluster/MemberList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) MemberStat(ctx context.Context, in *RequestMemberStat, opts ...grpc.CallOption) (*ResponseMemberStat, error) {
	out := new(ResponseMemberStat)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Cluster/MemberStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterClient) AgentList(ctx context.Context, in *RequestAgentList, opts ...grpc.CallOption) (*ResponseAgentList, error) {
	out := new(ResponseAgentList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Cluster/AgentList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterServer is the server API for Cluster service.
type ClusterServer interface {
	MemberList(context.Context, *RequestMemberList) (*ResponseMemberList, error)
	MemberStat(context.Context, *RequestMemberStat) (*ResponseMemberStat, error)
	AgentList(context.Context, *RequestAgentList) (*ResponseAgentList, error)
}

// UnimplementedClusterServer can be embedded to have forward compatible implementations.
type UnimplementedClusterServer struct {
}

func (*UnimplementedClusterServer) MemberList(context.Context, *RequestMemberList) (*ResponseMemberList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberList not implemented")
}
func (*UnimplementedClusterServer) MemberStat(context.Context, *RequestMemberStat) (*ResponseMemberStat, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MemberStat not implemented")
}
func (*UnimplementedClusterServer) AgentList(context.Context, *RequestAgentList) (*ResponseAgentList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AgentList not implemented")
}

func RegisterClusterServer(s *grpc.Server, srv ClusterServer) {
	s.RegisterService(&_Cluster_serviceDesc, srv)
}

func _Cluster_MemberList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMemberList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).MemberList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Cluster/MemberList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).MemberList(ctx, req.(*RequestMemberList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_MemberStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMemberStat)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).MemberStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Cluster/MemberStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).MemberStat(ctx, req.(*RequestMemberStat))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cluster_AgentList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestAgentList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterServer).AgentList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Cluster/AgentList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterServer).AgentList(ctx, req.(*RequestAgentList))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cluster_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy.rpc.Cluster",
	HandlerType: (*ClusterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MemberList",
			Handler:    _Cluster_MemberList_Handler,
		},
		{
			MethodName: "MemberStat",
			Handler:    _Cluster_MemberStat_Handler,
		},
		{
			MethodName: "AgentList",
			Handler:    _Cluster_AgentList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/rpc/rpc.proto",
}

// AdminClient is the client API for Admin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AdminClient interface {
	Ping(ctx context.Context, in *RequestPing, opts ...grpc.CallOption) (*ResponsePong, error)
	UserList(ctx context.Context, in *RequestUserList, opts ...grpc.CallOption) (*ResponseUserList, error)
	UserAdd(ctx context.Context, in *RequestUserAdd, opts ...grpc.CallOption) (*ResponseUserAdd, error)
	UserEdit(ctx context.Context, in *RequestUserEdit, opts ...grpc.CallOption) (*ResponseUserEdit, error)
	UserDel(ctx context.Context, in *RequestUserDel, opts ...grpc.CallOption) (*ResponseUserDel, error)
	UserGet(ctx context.Context, in *RequestUserGet, opts ...grpc.CallOption) (*ResponseUserGet, error)
	BecomeMaintainer(ctx context.Context, in *RequestBecomeMaintainer, opts ...grpc.CallOption) (*ResponseBecomeMaintainer, error)
	ToggleAdmin(ctx context.Context, in *RequestToggleAdmin, opts ...grpc.CallOption) (*ResponseToggleAdmin, error)
	TokenNew(ctx context.Context, in *RequestTokenNew, opts ...grpc.CallOption) (*ResponseTokenNew, error)
	RoleList(ctx context.Context, in *RequestRoleList, opts ...grpc.CallOption) (*ResponseRoleList, error)
	BackendList(ctx context.Context, in *RequestBackendList, opts ...grpc.CallOption) (*ResponseBackendList, error)
}

type adminClient struct {
	cc grpc.ClientConnInterface
}

func NewAdminClient(cc grpc.ClientConnInterface) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) Ping(ctx context.Context, in *RequestPing, opts ...grpc.CallOption) (*ResponsePong, error) {
	out := new(ResponsePong)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UserList(ctx context.Context, in *RequestUserList, opts ...grpc.CallOption) (*ResponseUserList, error) {
	out := new(ResponseUserList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/UserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UserAdd(ctx context.Context, in *RequestUserAdd, opts ...grpc.CallOption) (*ResponseUserAdd, error) {
	out := new(ResponseUserAdd)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/UserAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UserEdit(ctx context.Context, in *RequestUserEdit, opts ...grpc.CallOption) (*ResponseUserEdit, error) {
	out := new(ResponseUserEdit)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/UserEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UserDel(ctx context.Context, in *RequestUserDel, opts ...grpc.CallOption) (*ResponseUserDel, error) {
	out := new(ResponseUserDel)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/UserDel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) UserGet(ctx context.Context, in *RequestUserGet, opts ...grpc.CallOption) (*ResponseUserGet, error) {
	out := new(ResponseUserGet)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/UserGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) BecomeMaintainer(ctx context.Context, in *RequestBecomeMaintainer, opts ...grpc.CallOption) (*ResponseBecomeMaintainer, error) {
	out := new(ResponseBecomeMaintainer)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/BecomeMaintainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) ToggleAdmin(ctx context.Context, in *RequestToggleAdmin, opts ...grpc.CallOption) (*ResponseToggleAdmin, error) {
	out := new(ResponseToggleAdmin)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/ToggleAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) TokenNew(ctx context.Context, in *RequestTokenNew, opts ...grpc.CallOption) (*ResponseTokenNew, error) {
	out := new(ResponseTokenNew)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/TokenNew", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) RoleList(ctx context.Context, in *RequestRoleList, opts ...grpc.CallOption) (*ResponseRoleList, error) {
	out := new(ResponseRoleList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/RoleList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *adminClient) BackendList(ctx context.Context, in *RequestBackendList, opts ...grpc.CallOption) (*ResponseBackendList, error) {
	out := new(ResponseBackendList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.Admin/BackendList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AdminServer is the server API for Admin service.
type AdminServer interface {
	Ping(context.Context, *RequestPing) (*ResponsePong, error)
	UserList(context.Context, *RequestUserList) (*ResponseUserList, error)
	UserAdd(context.Context, *RequestUserAdd) (*ResponseUserAdd, error)
	UserEdit(context.Context, *RequestUserEdit) (*ResponseUserEdit, error)
	UserDel(context.Context, *RequestUserDel) (*ResponseUserDel, error)
	UserGet(context.Context, *RequestUserGet) (*ResponseUserGet, error)
	BecomeMaintainer(context.Context, *RequestBecomeMaintainer) (*ResponseBecomeMaintainer, error)
	ToggleAdmin(context.Context, *RequestToggleAdmin) (*ResponseToggleAdmin, error)
	TokenNew(context.Context, *RequestTokenNew) (*ResponseTokenNew, error)
	RoleList(context.Context, *RequestRoleList) (*ResponseRoleList, error)
	BackendList(context.Context, *RequestBackendList) (*ResponseBackendList, error)
}

// UnimplementedAdminServer can be embedded to have forward compatible implementations.
type UnimplementedAdminServer struct {
}

func (*UnimplementedAdminServer) Ping(context.Context, *RequestPing) (*ResponsePong, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedAdminServer) UserList(context.Context, *RequestUserList) (*ResponseUserList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserList not implemented")
}
func (*UnimplementedAdminServer) UserAdd(context.Context, *RequestUserAdd) (*ResponseUserAdd, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserAdd not implemented")
}
func (*UnimplementedAdminServer) UserEdit(context.Context, *RequestUserEdit) (*ResponseUserEdit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserEdit not implemented")
}
func (*UnimplementedAdminServer) UserDel(context.Context, *RequestUserDel) (*ResponseUserDel, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserDel not implemented")
}
func (*UnimplementedAdminServer) UserGet(context.Context, *RequestUserGet) (*ResponseUserGet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserGet not implemented")
}
func (*UnimplementedAdminServer) BecomeMaintainer(context.Context, *RequestBecomeMaintainer) (*ResponseBecomeMaintainer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BecomeMaintainer not implemented")
}
func (*UnimplementedAdminServer) ToggleAdmin(context.Context, *RequestToggleAdmin) (*ResponseToggleAdmin, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleAdmin not implemented")
}
func (*UnimplementedAdminServer) TokenNew(context.Context, *RequestTokenNew) (*ResponseTokenNew, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TokenNew not implemented")
}
func (*UnimplementedAdminServer) RoleList(context.Context, *RequestRoleList) (*ResponseRoleList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RoleList not implemented")
}
func (*UnimplementedAdminServer) BackendList(context.Context, *RequestBackendList) (*ResponseBackendList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackendList not implemented")
}

func RegisterAdminServer(s *grpc.Server, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestPing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).Ping(ctx, req.(*RequestPing))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUserList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/UserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UserList(ctx, req.(*RequestUserList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UserAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUserAdd)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UserAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/UserAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UserAdd(ctx, req.(*RequestUserAdd))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UserEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUserEdit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UserEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/UserEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UserEdit(ctx, req.(*RequestUserEdit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UserDel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUserDel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UserDel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/UserDel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UserDel(ctx, req.(*RequestUserDel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_UserGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUserGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).UserGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/UserGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).UserGet(ctx, req.(*RequestUserGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_BecomeMaintainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBecomeMaintainer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).BecomeMaintainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/BecomeMaintainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).BecomeMaintainer(ctx, req.(*RequestBecomeMaintainer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_ToggleAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestToggleAdmin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ToggleAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/ToggleAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ToggleAdmin(ctx, req.(*RequestToggleAdmin))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_TokenNew_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestTokenNew)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).TokenNew(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/TokenNew",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).TokenNew(ctx, req.(*RequestTokenNew))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_RoleList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestRoleList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).RoleList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/RoleList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).RoleList(ctx, req.(*RequestRoleList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Admin_BackendList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestBackendList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).BackendList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.Admin/BackendList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).BackendList(ctx, req.(*RequestBackendList))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy.rpc.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Admin_Ping_Handler,
		},
		{
			MethodName: "UserList",
			Handler:    _Admin_UserList_Handler,
		},
		{
			MethodName: "UserAdd",
			Handler:    _Admin_UserAdd_Handler,
		},
		{
			MethodName: "UserEdit",
			Handler:    _Admin_UserEdit_Handler,
		},
		{
			MethodName: "UserDel",
			Handler:    _Admin_UserDel_Handler,
		},
		{
			MethodName: "UserGet",
			Handler:    _Admin_UserGet_Handler,
		},
		{
			MethodName: "BecomeMaintainer",
			Handler:    _Admin_BecomeMaintainer_Handler,
		},
		{
			MethodName: "ToggleAdmin",
			Handler:    _Admin_ToggleAdmin_Handler,
		},
		{
			MethodName: "TokenNew",
			Handler:    _Admin_TokenNew_Handler,
		},
		{
			MethodName: "RoleList",
			Handler:    _Admin_RoleList_Handler,
		},
		{
			MethodName: "BackendList",
			Handler:    _Admin_BackendList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/rpc/rpc.proto",
}

// CertificateAuthorityClient is the client API for CertificateAuthority service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CertificateAuthorityClient interface {
	GetSignedList(ctx context.Context, in *RequestGetSignedList, opts ...grpc.CallOption) (*ResponseGetSignedList, error)
	NewClientCert(ctx context.Context, in *RequestNewClientCert, opts ...grpc.CallOption) (*ResponseNewClientCert, error)
	NewServerCert(ctx context.Context, in *RequestNewServerCert, opts ...grpc.CallOption) (*ResponseNewServerCert, error)
	Revoke(ctx context.Context, in *CARequestRevoke, opts ...grpc.CallOption) (*CAResponseRevoke, error)
	Get(ctx context.Context, in *CARequestGet, opts ...grpc.CallOption) (*CAResponseGet, error)
	GetRevokedList(ctx context.Context, in *RequestGetRevokedList, opts ...grpc.CallOption) (*ResponseGetRevokedList, error)
	WatchRevokedCert(ctx context.Context, in *RequestWatchRevokedCert, opts ...grpc.CallOption) (CertificateAuthority_WatchRevokedCertClient, error)
}

type certificateAuthorityClient struct {
	cc grpc.ClientConnInterface
}

func NewCertificateAuthorityClient(cc grpc.ClientConnInterface) CertificateAuthorityClient {
	return &certificateAuthorityClient{cc}
}

func (c *certificateAuthorityClient) GetSignedList(ctx context.Context, in *RequestGetSignedList, opts ...grpc.CallOption) (*ResponseGetSignedList, error) {
	out := new(ResponseGetSignedList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/GetSignedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) NewClientCert(ctx context.Context, in *RequestNewClientCert, opts ...grpc.CallOption) (*ResponseNewClientCert, error) {
	out := new(ResponseNewClientCert)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/NewClientCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) NewServerCert(ctx context.Context, in *RequestNewServerCert, opts ...grpc.CallOption) (*ResponseNewServerCert, error) {
	out := new(ResponseNewServerCert)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/NewServerCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) Revoke(ctx context.Context, in *CARequestRevoke, opts ...grpc.CallOption) (*CAResponseRevoke, error) {
	out := new(CAResponseRevoke)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/Revoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) Get(ctx context.Context, in *CARequestGet, opts ...grpc.CallOption) (*CAResponseGet, error) {
	out := new(CAResponseGet)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) GetRevokedList(ctx context.Context, in *RequestGetRevokedList, opts ...grpc.CallOption) (*ResponseGetRevokedList, error) {
	out := new(ResponseGetRevokedList)
	err := c.cc.Invoke(ctx, "/proxy.rpc.CertificateAuthority/GetRevokedList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *certificateAuthorityClient) WatchRevokedCert(ctx context.Context, in *RequestWatchRevokedCert, opts ...grpc.CallOption) (CertificateAuthority_WatchRevokedCertClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CertificateAuthority_serviceDesc.Streams[0], "/proxy.rpc.CertificateAuthority/WatchRevokedCert", opts...)
	if err != nil {
		return nil, err
	}
	x := &certificateAuthorityWatchRevokedCertClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CertificateAuthority_WatchRevokedCertClient interface {
	Recv() (*ResponseWatchRevokedCert, error)
	grpc.ClientStream
}

type certificateAuthorityWatchRevokedCertClient struct {
	grpc.ClientStream
}

func (x *certificateAuthorityWatchRevokedCertClient) Recv() (*ResponseWatchRevokedCert, error) {
	m := new(ResponseWatchRevokedCert)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CertificateAuthorityServer is the server API for CertificateAuthority service.
type CertificateAuthorityServer interface {
	GetSignedList(context.Context, *RequestGetSignedList) (*ResponseGetSignedList, error)
	NewClientCert(context.Context, *RequestNewClientCert) (*ResponseNewClientCert, error)
	NewServerCert(context.Context, *RequestNewServerCert) (*ResponseNewServerCert, error)
	Revoke(context.Context, *CARequestRevoke) (*CAResponseRevoke, error)
	Get(context.Context, *CARequestGet) (*CAResponseGet, error)
	GetRevokedList(context.Context, *RequestGetRevokedList) (*ResponseGetRevokedList, error)
	WatchRevokedCert(*RequestWatchRevokedCert, CertificateAuthority_WatchRevokedCertServer) error
}

// UnimplementedCertificateAuthorityServer can be embedded to have forward compatible implementations.
type UnimplementedCertificateAuthorityServer struct {
}

func (*UnimplementedCertificateAuthorityServer) GetSignedList(context.Context, *RequestGetSignedList) (*ResponseGetSignedList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSignedList not implemented")
}
func (*UnimplementedCertificateAuthorityServer) NewClientCert(context.Context, *RequestNewClientCert) (*ResponseNewClientCert, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewClientCert not implemented")
}
func (*UnimplementedCertificateAuthorityServer) NewServerCert(context.Context, *RequestNewServerCert) (*ResponseNewServerCert, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewServerCert not implemented")
}
func (*UnimplementedCertificateAuthorityServer) Revoke(context.Context, *CARequestRevoke) (*CAResponseRevoke, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Revoke not implemented")
}
func (*UnimplementedCertificateAuthorityServer) Get(context.Context, *CARequestGet) (*CAResponseGet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCertificateAuthorityServer) GetRevokedList(context.Context, *RequestGetRevokedList) (*ResponseGetRevokedList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRevokedList not implemented")
}
func (*UnimplementedCertificateAuthorityServer) WatchRevokedCert(*RequestWatchRevokedCert, CertificateAuthority_WatchRevokedCertServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchRevokedCert not implemented")
}

func RegisterCertificateAuthorityServer(s *grpc.Server, srv CertificateAuthorityServer) {
	s.RegisterService(&_CertificateAuthority_serviceDesc, srv)
}

func _CertificateAuthority_GetSignedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetSignedList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).GetSignedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/GetSignedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).GetSignedList(ctx, req.(*RequestGetSignedList))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_NewClientCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNewClientCert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).NewClientCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/NewClientCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).NewClientCert(ctx, req.(*RequestNewClientCert))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_NewServerCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestNewServerCert)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).NewServerCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/NewServerCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).NewServerCert(ctx, req.(*RequestNewServerCert))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_Revoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CARequestRevoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).Revoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/Revoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).Revoke(ctx, req.(*CARequestRevoke))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CARequestGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).Get(ctx, req.(*CARequestGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_GetRevokedList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetRevokedList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CertificateAuthorityServer).GetRevokedList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.CertificateAuthority/GetRevokedList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CertificateAuthorityServer).GetRevokedList(ctx, req.(*RequestGetRevokedList))
	}
	return interceptor(ctx, in, info, handler)
}

func _CertificateAuthority_WatchRevokedCert_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestWatchRevokedCert)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CertificateAuthorityServer).WatchRevokedCert(m, &certificateAuthorityWatchRevokedCertServer{stream})
}

type CertificateAuthority_WatchRevokedCertServer interface {
	Send(*ResponseWatchRevokedCert) error
	grpc.ServerStream
}

type certificateAuthorityWatchRevokedCertServer struct {
	grpc.ServerStream
}

func (x *certificateAuthorityWatchRevokedCertServer) Send(m *ResponseWatchRevokedCert) error {
	return x.ServerStream.SendMsg(m)
}

var _CertificateAuthority_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy.rpc.CertificateAuthority",
	HandlerType: (*CertificateAuthorityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSignedList",
			Handler:    _CertificateAuthority_GetSignedList_Handler,
		},
		{
			MethodName: "NewClientCert",
			Handler:    _CertificateAuthority_NewClientCert_Handler,
		},
		{
			MethodName: "NewServerCert",
			Handler:    _CertificateAuthority_NewServerCert_Handler,
		},
		{
			MethodName: "Revoke",
			Handler:    _CertificateAuthority_Revoke_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _CertificateAuthority_Get_Handler,
		},
		{
			MethodName: "GetRevokedList",
			Handler:    _CertificateAuthority_GetRevokedList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchRevokedCert",
			Handler:       _CertificateAuthority_WatchRevokedCert_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pkg/rpc/rpc.proto",
}

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetBackends(ctx context.Context, in *RequestGetBackends, opts ...grpc.CallOption) (*ResponseGetBackends, error)
}

type userClient struct {
	cc grpc.ClientConnInterface
}

func NewUserClient(cc grpc.ClientConnInterface) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetBackends(ctx context.Context, in *RequestGetBackends, opts ...grpc.CallOption) (*ResponseGetBackends, error) {
	out := new(ResponseGetBackends)
	err := c.cc.Invoke(ctx, "/proxy.rpc.User/GetBackends", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetBackends(context.Context, *RequestGetBackends) (*ResponseGetBackends, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetBackends(context.Context, *RequestGetBackends) (*ResponseGetBackends, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBackends not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetBackends_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetBackends)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetBackends(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proxy.rpc.User/GetBackends",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetBackends(ctx, req.(*RequestGetBackends))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proxy.rpc.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBackends",
			Handler:    _User_GetBackends_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/rpc/rpc.proto",
}
