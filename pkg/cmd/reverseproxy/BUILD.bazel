load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "reverseproxy",
    srcs = ["reverseproxy.go"],
    importpath = "go.f110.dev/heimdallr/pkg/cmd/reverseproxy",
    visibility = ["//visibility:public"],
    deps = [
        "//pkg/auth",
        "//pkg/authproxy",
        "//pkg/cert",
        "//pkg/cert/vault",
        "//pkg/config",
        "//pkg/config/configutil",
        "//pkg/config/configv2",
        "//pkg/connector",
        "//pkg/dashboard",
        "//pkg/database",
        "//pkg/database/etcd",
        "//pkg/database/mysql",
        "//pkg/database/mysql/dao",
        "//pkg/database/mysql/entity",
        "//pkg/fsm",
        "//pkg/logger",
        "//pkg/netutil",
        "//pkg/rpc",
        "//pkg/rpc/rpcclient",
        "//pkg/rpc/rpcserver",
        "//pkg/server",
        "//pkg/server/identityprovider",
        "//pkg/server/internalapi",
        "//pkg/server/token",
        "//pkg/session",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/providers/zap/v2:zap",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/v2:go-grpc-middleware",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/logging",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware/v2/interceptors/retry",
        "//vendor/github.com/hashicorp/vault/api",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.etcd.io/etcd/server/v3/embed",
        "//vendor/go.f110.dev/protoc-ddl/probe",
        "//vendor/go.uber.org/zap",
        "//vendor/golang.org/x/xerrors",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/connectivity",
        "//vendor/google.golang.org/grpc/credentials",
        "//vendor/google.golang.org/grpc/keepalive",
    ],
)
