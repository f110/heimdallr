filegroup(
    name = "all",
    srcs = ["RELEASE.bzl"],
    visibility = ["//visibility:public"],
)

load("//build/rules/go:vendor.bzl", "go_vendor")

# gazelle:proto disable_global
# gazelle:prefix go.f110.dev/heimdallr

go_vendor(
    name = "vendor",
    extra_args = [
        "-exclude",
        "third_party",
    ],
)

load("//:RELEASE.bzl", "ASSET_FILES", "RELEASE_BRANCH", "RELEASE_MESSAGE", "VERSION")
load("//container:repo.bzl", "CONTAINER_IMAGE_REPOSITORIES")
load("//build/rules:release.bzl", "github_release", "template_string")

template_string(
    name = "release_message",
    data = {
        "version": VERSION,
        "proxy_repository": CONTAINER_IMAGE_REPOSITORIES["proxy"],
        "rpcserver_repository": CONTAINER_IMAGE_REPOSITORIES["rpcserver"],
        "dashboard_repository": CONTAINER_IMAGE_REPOSITORIES["dashboard"],
        "ctl_repository": CONTAINER_IMAGE_REPOSITORIES["ctl"],
        "operator_repository": CONTAINER_IMAGE_REPOSITORIES["operator"],
    },
    template = RELEASE_MESSAGE,
)

github_release(
    name = "github_release",
    assets = ASSET_FILES,
    body = ":release_message",
    branch = RELEASE_BRANCH,
    repository = "f110/heimdallr",
    version = VERSION,
)

load("@dev_f110_mono//build:job.bzl", "job")

job(
    name = "test_all",
    all_revision = True,
    command = "test",
    config_name = "ci",
    cpu_limit = "2000m",
    github_status = True,
    targets = "//...",
)

sh_binary(
    name = "create_cluster",
    srcs = ["//cmd/heimdev"],
    args = [
        "cluster",
        "create",
        "--kind=$(location @kind//:file)",
        "--k8s-version=v1.21.1",
        "--crd=$(location //operator/config/crd:crd)",
    ],
    data = [
        "//operator/config/crd",
        "@kind//:file",
    ],
)

sh_binary(
    name = "delete_cluster",
    srcs = ["//cmd/heimdev"],
    args = [
        "cluster",
        "delete",
        "--kind=$(location @kind//:file)",
    ],
    data = ["@kind//:file"],
)
