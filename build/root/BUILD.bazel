filegroup(
    name = "all",
    srcs = ["RELEASE.bzl"],
    visibility = ["//visibility:public"],
)

load("//build/rules/go:vendor.bzl", "go_vendor")

# gazelle:proto disable_global
# gazelle:prefix go.f110.dev/heimdallr

go_vendor(
    name = "vendor",
    extra_args = [
        "-exclude",
        "third_party",
    ],
)

load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("//:RELEASE.bzl", "RELEASE_MESSAGE", "VERSION")

pkg_tar(
    name = "bin",
    srcs = [
        "//cmd/heimdallr-proxy",
    ],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "image",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/heimdallr-proxy"],
    tars = [":bin"],
)

CONTAINER_IMAGE_REPOSITORIES = {
    "proxy": "f110/heimdallr-proxy",
    "rpcserver": "f110/heimdallr-rpcserver",
    "dashboard": "f110/heimdallr-dashboard",
    "ctl": "f110/heimdallr-ctl",
}

container_push(
    name = "push",
    format = "Docker",
    image = ":image",
    registry = "quay.io",
    repository = CONTAINER_IMAGE_REPOSITORIES["proxy"],
    tag = "dev-{BUILD_USER}",
)

pkg_tar(
    name = "bin_rpcserver",
    srcs = [
        "//cmd/heim-rpcserver",
        "@grpc_health_probe//file",
    ],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "image_rpcserver",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/heim-rpcserver"],
    tars = [":bin_rpcserver"],
)

container_push(
    name = "push_rpcserver",
    format = "Docker",
    image = ":image_rpcserver",
    registry = "quay.io",
    repository = CONTAINER_IMAGE_REPOSITORIES["rpcserver"],
    tag = "dev-{BUILD_USER}",
)

pkg_tar(
    name = "bin_dashboard",
    srcs = [
        "//cmd/heim-dashboard",
    ],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "image_dashboard",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/heim-dashboard"],
    tars = [":bin_dashboard"],
)

container_push(
    name = "push_dashboard",
    format = "Docker",
    image = ":image_dashboard",
    registry = "quay.io",
    repository = CONTAINER_IMAGE_REPOSITORIES["dashboard"],
    tag = "dev-{BUILD_USER}",
)

pkg_tar(
    name = "bin_ctl",
    srcs = ["//cmd/heimctl"],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "image_ctl",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/heimctl"],
    tars = [":bin_ctl"],
)

container_push(
    name = "push_ctl",
    format = "Docker",
    image = ":image_ctl",
    registry = "quay.io",
    repository = CONTAINER_IMAGE_REPOSITORIES["ctl"],
    tag = "dev-{BUILD_USER}",
)

load("@dev_f110_mono//build:job.bzl", "job")

job(
    name = "test_all",
    all_revision = True,
    command = "test",
    config_name = "ci",
    cpu_limit = "2000m",
    github_status = True,
    targets = "//...",
)

sh_binary(
    name = "tag_proxy",
    srcs = ["//script/container-release"],
    args = [
        "--repository",
        "quay.io/" + CONTAINER_IMAGE_REPOSITORIES["proxy"],
        "--sha256",
        "$(location :push.digest)",
        "--tag",
        VERSION,
    ],
    data = [
        ":push.digest",
    ],
)

sh_binary(
    name = "tag_rpcserver",
    srcs = ["//script/container-release"],
    args = [
        "--repository",
        "quay.io/" + CONTAINER_IMAGE_REPOSITORIES["rpcserver"],
        "--sha256",
        "$(location :push_rpcserver.digest)",
        "--tag",
        VERSION,
    ],
    data = [
        ":push_rpcserver.digest",
    ],
)

sh_binary(
    name = "tag_dashboard",
    srcs = ["//script/container-release"],
    args = [
        "--repository",
        "quay.io/" + CONTAINER_IMAGE_REPOSITORIES["dashboard"],
        "--sha256",
        "$(location :push_dashboard.digest)",
        "--tag",
        VERSION,
    ],
    data = [
        ":push_dashboard.digest",
    ],
)

sh_binary(
    name = "tag_ctl",
    srcs = ["//script/container-release"],
    args = [
        "--repository",
        "quay.io/" + CONTAINER_IMAGE_REPOSITORIES["ctl"],
        "--sha256",
        "$(location :push_ctl.digest)",
        "--tag",
        VERSION,
    ],
    data = [
        ":push_ctl.digest",
    ],
)

load("//build/rules:release.bzl", "github_release", "template_string")

template_string(
    name = "release_message",
    data = {
        "version": VERSION,
        "proxy_repository": CONTAINER_IMAGE_REPOSITORIES["proxy"],
        "rpcserver_repository": CONTAINER_IMAGE_REPOSITORIES["rpcserver"],
        "dashboard_repository": CONTAINER_IMAGE_REPOSITORIES["dashboard"],
        "ctl_repository": CONTAINER_IMAGE_REPOSITORIES["ctl"],
    },
    template = RELEASE_MESSAGE,
)

github_release(
    name = "github_release",
    assets = [
        "//operator/deploy:all-in-one",
        "//cmd/heim-agent:heim-agent_darwin_amd64",
        "//cmd/heim-agent:heim-agent_linux_amd64",
        "//cmd/heim-agent:heim-agent_windows_amd64",
        "//cmd/heim-proxy:heim-proxy_darwin_amd64",
        "//cmd/heim-proxy:heim-proxy_linux_amd64",
        "//cmd/heim-proxy:heim-proxy_windows_amd64",
    ],
    body = ":release_message",
    branch = "master",
    repository = "f110/heimdallr",
    version = VERSION,
)
