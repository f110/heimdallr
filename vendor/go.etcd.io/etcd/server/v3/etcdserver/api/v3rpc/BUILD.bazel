load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "v3rpc",
    srcs = [
        "auth.go",
        "codec.go",
        "grpc.go",
        "header.go",
        "interceptor.go",
        "key.go",
        "lease.go",
        "maintenance.go",
        "member.go",
        "metrics.go",
        "quota.go",
        "util.go",
        "watch.go",
    ],
    importmap = "go.f110.dev/heimdallr/vendor/go.etcd.io/etcd/server/v3/etcdserver/api/v3rpc",
    importpath = "go.etcd.io/etcd/server/v3/etcdserver/api/v3rpc",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/dustin/go-humanize",
        "//vendor/github.com/golang/protobuf/proto",
        "//vendor/github.com/grpc-ecosystem/go-grpc-middleware",
        "//vendor/github.com/grpc-ecosystem/go-grpc-prometheus",
        "//vendor/github.com/prometheus/client_golang/prometheus",
        "//vendor/go.etcd.io/etcd/api/v3/etcdserverpb",
        "//vendor/go.etcd.io/etcd/api/v3/mvccpb",
        "//vendor/go.etcd.io/etcd/api/v3/v3rpc/rpctypes",
        "//vendor/go.etcd.io/etcd/api/v3/version",
        "//vendor/go.etcd.io/etcd/client/pkg/v3/types",
        "//vendor/go.etcd.io/etcd/client/v3:client",
        "//vendor/go.etcd.io/etcd/client/v3/credentials",
        "//vendor/go.etcd.io/etcd/pkg/v3/adt",
        "//vendor/go.etcd.io/etcd/raft/v3:raft",
        "//vendor/go.etcd.io/etcd/server/v3/auth",
        "//vendor/go.etcd.io/etcd/server/v3/etcdserver",
        "//vendor/go.etcd.io/etcd/server/v3/etcdserver/api",
        "//vendor/go.etcd.io/etcd/server/v3/etcdserver/api/membership",
        "//vendor/go.etcd.io/etcd/server/v3/lease",
        "//vendor/go.etcd.io/etcd/server/v3/mvcc",
        "//vendor/go.etcd.io/etcd/server/v3/mvcc/backend",
        "//vendor/go.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc",
        "//vendor/go.uber.org/zap",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/health",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1",
        "//vendor/google.golang.org/grpc/metadata",
        "//vendor/google.golang.org/grpc/peer",
        "//vendor/google.golang.org/grpc/status",
    ],
)
